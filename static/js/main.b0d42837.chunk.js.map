{"version":3,"sources":["components/common/FormsControl/FormsControl.js","redux/dialogs-reducer.js","assets/images/user.png","assets/images/index.infinity-rotate-cycle-loader.svg","components/Header/Header.module.css","hoc/withAuthRedirect.js","components/common/FormsControl/FormsControl.module.css","validators/validators.js","serviceWorker.js","components/MainNav/MainNav.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","API/api.js","utis/object-helpers.js","redux/users-reducer.js","components/Users/User/User.jsx","components/common/Paginator.jsx","components/Users/Users.jsx","components/common/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatus/ProfileForm.jsx","components/Profile/ProfileCurrentData.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/profile-selectors.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","components/MainNav/MainNav.module.css","components/Profile/Profile.module.css","components/Users/User/User.module.css","components/Profile/MyPosts/ProfileInfo/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/common/Paginator.module.css"],"names":["Textarea","input","meta","props","hasError","touched","error","className","style","formControl","Input","createField","validationArray","component","name","type","placeholder","someInnerText","validate","required","initialState","dialogsData","id","messageData","message","addMessageActionCreator","formData","dialogsReducer","state","action","newestMessage","module","exports","withAuthRedirect","Component","connect","isAuth","auth","userInfo","isLogin","to","value","undefined","maxLengthCreator","maxLength","length","Boolean","window","location","hostname","match","MainNav","mainNav","activeClassName","active","News","mainContent","mainContentWrapper","Music","Settings","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","Pagesize","get","follow","userId","post","unfollow","delete","getProfile","profileAPI","authAPI","email","password","rememberMe","captcha","getStatus","updateStatus","newStatus","put","status","changeProfileData","newProfileData","savePhoto","photoFile","FormData","append","updateObjectInArray","item","ItemId","objectPropName","newObjectProps","map","u","FOLLOW","users","totalUsers","pageSize","isFetching","isFollowingInProcess","isFollowingInProcessUsers","followCallback","unfollowCallback","changeIsisFollowingInProcess","followUserHelpFunction","dispatch","apiMethod","actionCreator","a","async","data","resultCode","usersReducer","followed","count","page","newIsFetching","some","filter","User","user","user__name","src","img","small","userPhoto","alt","isFollowed","disabled","onClick","unfollowUser","followUser","Paginator","totalItemsCount","onPageChange","portionSize","pages","useState","portionNumber","setPortionNumber","totalPagesCount","Math","ceil","i","push","portionsCount","rightPortionBorder","leftPortionBorder","paginator","Users","myUsersDataElements","usersPage","lookingForAjob","lookingForAJob","photos","totalUsersCount","Preloader","preloader","UsersContainer","getNewUsers","this","React","UsersPage","response","items","totalCount","bind","ProfileStatusWithHooks","useEffect","setStatus","editMode","setEditMode","onChange","e","target","autoFocus","onBlur","onDoubleClick","isOwner","ProfileFormReduxForm","reduxForm","form","currentProfile","handleSubmit","onSubmit","Object","keys","contacts","Contact","platform","platformLink","ProfileCurrentData","changeProfile","contactsArray","profileCurrentData","promise","then","catch","initialValues","fullName","aboutMe","lookingForAJobDescription","ProfileInfo","profilePage","currentUser","descriptionBlock","ava","large","files","profileStatus","Post","postAva","like","MyPosts","memo","addPostCallback","myPostDataElements","myPostsData","AddPostFormReduxForm","maxLength10","Field","ADD_POST","setStatusActionCreator","setCurrentUserThunkCreator","savePhotoSuccess","profileReducer","newPost","MyPostsContainer","addPostActionCreator","Profile","getProfilePage","getIsAuth","getCurrentUserId","ProfileContainer","params","currentUserId","setCurrentUser","prevProps","prevState","compose","messages","stopSubmit","_error","Promise","reject","file","withRouter","Header","header","login","logout","captchaUrl","setLoginUserDataActionCreator","setCaptchaUrl","url","authReducer","HeaderContainer","Fragment","LoginFormRedux","registrationForm","summaryError","sendLoginDataRequest","request","loginWrapper","initialized","initializeApp","appReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","combineReducers","dialogsPage","formReducer","app","store","createStore","applyMiddleware","thunk","DialogsContainer","lazy","DialogsContainerWithSuspense","Suspense","fallback","App","isInitiolized","render","path","exact","AppContainer","SamuraiJsApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0d42837.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from'./FormsControl.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../validators/validators\";\r\n\r\nexport const Textarea=({input,meta,...props})=>{\r\n    const hasError=meta.touched&&meta.error\r\n    return(\r\n        <div className={style.formControl +\" \"+(hasError?style.error:'')}>\r\n            <div>\r\n            <textarea {...input} {...props}  />\r\n            </div>\r\n            <div>\r\n                {hasError&&<span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport const Input=({input,meta:{touched,error},...props})=>{\r\n    const hasError=touched&&error\r\n    return(\r\n        <div className={style.formControl +\" \"+(hasError?style.error:'')}>\r\n            <div>\r\n                <input {...input} {...props}  />\r\n            </div>\r\n            <div>\r\n                {hasError&&<span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const createField=(validationArray,component,name,type,placeholder,someInnerText=\"\")=>{\r\n    return <div>\r\n        <Field validate={[...validationArray]} component={component} name={name} type={type} placeholder={placeholder}/>{someInnerText}\r\n    </div>\r\n}\r\n\r\ncreateField([required],Input,\"email\",\"input\")\r\n\r\n","const ADD_MESSAGE = \"dialogs/ADD_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [{id: 1, name: 'Alex'}, {id: 2, name: 'Van\\'ka'},\r\n        {id: 3, name: 'MexaJIbI4'}, {id: 4, name: 'OJIEr'}, {id: 5, name: 'BacbKA'}],\r\n    messageData: [{id: 1, message: 'HI MAN'}, {id: 2, message: 'How are You??'}, {\r\n        id: 3,\r\n        message: 'I am fine Thanks'\r\n    }],\r\n\r\n}\r\nlet dialogsReducer = (state = initialState, action) => {\r\n    if (action.type === ADD_MESSAGE) {\r\n        let newestMessage = {id: 4, message: action.formData.message};\r\n        return {\r\n            ...state, messageData: [...state.messageData, newestMessage],\r\n        }\r\n    }\r\n    return state\r\n}\r\nexport let addMessageActionCreator = (formData) => ({type: ADD_MESSAGE, formData})\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/user.99219baa.png\";","module.exports = __webpack_public_path__ + \"static/media/index.infinity-rotate-cycle-loader.13cbb991.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1YROe\"};","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    let AfterHoc = (props) => {\r\n        return (!props.isAuth) ?\r\n            <Redirect to='/login'/> : <Component {...props}/>;\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {isAuth: state.auth.userInfo.isLogin}\r\n    }\r\n    return  connect(mapStateToProps, {})(AfterHoc)\r\n}\r\nexport default withAuthRedirect\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2qJ6i\",\"error\":\"FormsControl_error__3FktX\",\"summaryError\":\"FormsControl_summaryError__3AKe9\",\"captcha\":\"FormsControl_captcha__iQVsK\",\"loginWrapper\":\"FormsControl_loginWrapper__3LASl\",\"login\":\"FormsControl_login__14Msu\"};","export const required =value=>value? undefined :\"field is required\"\r\nexport const maxLengthCreator =(maxLength)=>(value)=>{\r\n    if (value.length>maxLength) {return `max length is ${maxLength}`}\r\n    return undefined\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport style from './MainNav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst MainNav = () => {\r\n    return (\r\n\r\n        <nav className={style.mainNav}>\r\n            <div><NavLink activeClassName={style.active} to=\"/profile\" >Profile</NavLink></div>\r\n            <div><NavLink activeClassName={style.active} to=\"/messages\">Messages</NavLink></div>\r\n            <div><NavLink activeClassName={style.active} to=\"/news\">News</NavLink></div>\r\n            <div><NavLink activeClassName={style.active} to=\"/music\">Music</NavLink></div>\r\n            <div><NavLink activeClassName={style.active} to=\"/settings\">Settings</NavLink></div>\r\n            <div><NavLink activeClassName={style.active} to=\"/users\">Users</NavLink></div>\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default MainNav;\r\n","import React from 'react';\r\nimport style from './News.module.css'\r\nconst News = () => {\r\n    return (\r\n        <main className={style.mainContent}>\r\n           <div className={style.mainContentWrapper}>\r\n               News\r\n           </div>\r\n        </main>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport style from './Music.module.css'\r\nconst Music = () => {\r\n    return (\r\n        <main className={style.mainContent}>\r\n           <div className={style.mainContentWrapper}>\r\n              Music\r\n           </div>\r\n        </main>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport style from './Settings.module.css'\r\nconst Settings = () => {\r\n    return (\r\n        <main className={style.mainContent}>\r\n           <div className={style.mainContentWrapper}>\r\n              Settings\r\n           </div>\r\n        </main>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"2e11e55a-6317-486e-b332-4118c5f8bf85\"},\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, Pagesize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${Pagesize}`)\r\n\r\n    },\r\n    follow: (userId) => {\r\n\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow: (userId) => {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile: (userId) => {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthStatus: () => {\r\n        return instance.get('auth/me')\r\n    },\r\n    login: (email, password, rememberMe=false,captcha) => {\r\n        return instance.post('auth/login', {email, password, rememberMe,captcha})\r\n    },\r\n    logout: () => {\r\n        return instance.delete('auth/login')\r\n    },\r\n    getCaptcha:()=>{\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId) => {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus: (userId) => {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus: (newStatus) => {\r\n        return instance.put('profile/status', {status: newStatus})\r\n    },\r\n    changeProfileData: (newProfileData) => {\r\n        return instance.put('profile',newProfileData)\r\n    },\r\n    savePhoto:(photoFile)=>{\r\n        const formData = new FormData()\r\n        formData.append(\"image\",photoFile)\r\n        return instance.put(`profile/photo`,formData,{headers:{\"Content-Type\": \"multipart/form-data\"}})\r\n    }\r\n}\r\n\r\n","export let updateObjectInArray = (item, ItemId, objectPropName, newObjectProps) => {\r\n    return item.map((u) => {\r\n        if (u[objectPropName] === ItemId) {\r\n            return {...u, ...newObjectProps}\r\n        } else {\r\n            return u\r\n        }\r\n    })\r\n}","import {usersAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../utis/object-helpers\";\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = \"users/UNFOLLOW\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_TOTAL_USERS = 'users/SET_TOTAL_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\n\r\n\r\nconst IS_FETCHING_CHANGE = 'users/IS_FETCHING_CHANGE'\r\nconst IS_FOLLOWING_IN_PROCESS = 'users/IS_FOLLOWING_IN_PROCESS'\r\nlet initialState = {\r\n    users: [],\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    isFetching: false,\r\n    isFollowingInProcess: false,\r\n    isFollowingInProcessUsers: []\r\n}\r\n\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n\r\n            }\r\n        case UNFOLLOW : {\r\n            return {\r\n                ...state, users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n\r\n        }\r\n        case SET_TOTAL_USERS: {\r\n            return {\r\n                ...state, totalUsers: action.count\r\n            }\r\n\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.page\r\n            }\r\n\r\n        }\r\n        case IS_FETCHING_CHANGE: {\r\n\r\n\r\n            let newIsFetching = !state.isFetching\r\n\r\n            return {\r\n                ...state, isFetching: newIsFetching\r\n            }\r\n        }\r\n        case IS_FOLLOWING_IN_PROCESS: {\r\n            if (state.isFollowingInProcessUsers.some((item) => item === action.userId)) {\r\n                return {\r\n                    ...state, isFollowingInProcessUsers:\r\n                        [state.isFollowingInProcessUsers.filter((item) => item !== action.userId)]\r\n                }\r\n            } else return {\r\n                ...state, isFollowingInProcessUsers: [...state.isFollowingInProcessUsers, action.userId]\r\n            }\r\n\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport let followCallback = (id) => ({type: FOLLOW, userId: id})\r\nexport let unfollowCallback = (id) => ({type: UNFOLLOW, userId: id})\r\nexport let setUsersCallback = (users) => ({type: SET_USERS, users: users})\r\nexport let setTotalUsersCallback = (count) => ({type: SET_TOTAL_USERS, count: count})\r\nexport let setCurrentPageCallback = (page) => ({type: SET_CURRENT_PAGE, page: page})\r\nexport let changeIsFetchingCallback = () => ({type: IS_FETCHING_CHANGE})\r\nexport let changeIsisFollowingInProcess = (userId) => ({type: IS_FOLLOWING_IN_PROCESS, userId})\r\n\r\nexport let getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(changeIsFetchingCallback())\r\n    let response = await usersAPI.getUsers(currentPage, pageSize)\r\n    if (response) {\r\n        dispatch(setUsersCallback(response.data.items));\r\n        dispatch(setTotalUsersCallback(response.data.totalCount));\r\n        dispatch(setCurrentPageCallback(currentPage))\r\n        dispatch(changeIsFetchingCallback())\r\n    }\r\n\r\n}\r\n\r\nlet followUserHelpFunction = async (userId, dispatch, apiMethod, actionCreator) => {\r\n    dispatch(changeIsisFollowingInProcess(userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n        dispatch(changeIsisFollowingInProcess(userId))\r\n\r\n    }\r\n}\r\n\r\nexport let followUserThunkCreator = (userId) => async (dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    followUserHelpFunction(userId, dispatch, apiMethod, followCallback)\r\n}\r\n\r\nexport let unfollowUserThunkCreator = (userId) => async (dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    followUserHelpFunction(userId, dispatch, apiMethod, unfollowCallback)\r\n}\r\n\r\n\r\nexport default usersReducer","import React from 'react';\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\nimport style from './User.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n\r\n    let follow = () => {\r\n        props.followUser(props.userId)\r\n    }\r\n\r\n\r\n    let unfollow = () => {\r\n        props.unfollowUser(props.userId)\r\n    }\r\n\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.user__name}>\r\n                {props.name}\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/profile/' + props.userId}>\r\n                    <img src={props.img.small === null ? userPhoto : props.img.small} className={style.userPhoto}\r\n                         alt='Тут ава будет'/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {props.isFollowed === true ?\r\n                    <button disabled={props.isFollowingInProcessUsers.some((item) => item == props.userId)}\r\n                            onClick={unfollow}>UnFollow</button> :\r\n                    <button disabled={props.isFollowingInProcessUsers.some((item) => item == props.userId)}\r\n                            onClick={follow}>follow</button>}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import React, {useState} from 'react'\r\nimport style from './Paginator.module.css'\r\n\r\nconst Paginator = ({totalItemsCount, currentPage, pageSize, onPageChange, portionSize = 10}) => {\r\n\r\n    let pages = []\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let totalPagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    for (let i = 1; i <= totalPagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionsCount = totalPagesCount / portionSize\r\n    let rightPortionBorder = portionNumber * pageSize\r\n    let leftPortionBorder = (portionNumber - 1) * pageSize + 1\r\ndebugger\r\n    return <div className={style.paginator}>\r\n        {portionNumber> 1&&<button onClick={()=>{setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n        {pages.filter(item => item <= rightPortionBorder && item >= leftPortionBorder).map(item => <button className={(item===currentPage)? style.active:\"\"}\r\n            onClick={() => {\r\n                onPageChange(item, pageSize)\r\n            }}>{item}</button>)}\r\n        {portionsCount>portionNumber &&<button onClick={()=>{setPortionNumber(portionNumber + 1)}}>Next</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from 'react';\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../common/Paginator\";\r\n\r\n\r\nconst Users = (props) => {\r\n    let myUsersDataElements = props.usersPage.users.map(item =>\r\n        <User name={item.name}\r\n              lookingForAjob={item.lookingForAJob}\r\n              userId={item.id}\r\n              isFollowed={item.followed} img={item.photos}\r\n              followCallback={props.followCallback} unfollowCallback={props.unfollowCallback}\r\n              isFollowingInProcessUsers={props.isFollowingInProcessUsers}\r\n              followUser={props.followUser}\r\n              unfollowUser={props.unfollowUser}\r\n        />)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Paginator totalItemsCount={props.totalUsersCount} currentPage={props.currentPage}\r\n                           pageSize={props.pageSize} onPageChange={props.onPageChange}/>\r\n            </div>\r\n            <div>\r\n                {myUsersDataElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Users;\r\n","import React from 'react';\r\nimport preloader from '../../assets/images/index.infinity-rotate-cycle-loader.svg'\r\n\r\nconst Preloader = (props)=> {\r\nreturn (\r\n    <div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n)\r\n}\r\nexport default Preloader","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {followUserThunkCreator, getUsersThunkCreator, unfollowUserThunkCreator} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersPage: state.UsersPage,\r\n        totalUsersCount: state.UsersPage.totalUsers,\r\n        currentPage: state.UsersPage.currentPage,\r\n        pageSize: state.UsersPage.pageSize\r\n    }\r\n\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.onPageChange(this.props.usersPage.currentPage, this.props.usersPage.pageSize)\r\n    }\r\n\r\n    getNewUsers = (item) => {\r\n        this.props.onPageChange(item, this.props.usersPage.pageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.usersPage.isFetching ? <Preloader/> : null}\r\n                <Users getNewUsers={this.getNewUsers} usersPage={this.props.usersPage}\r\n                       isFollowingInProcessUsers={this.props.usersPage.isFollowingInProcessUsers}\r\n                       followUser={this.props.followUser}\r\n                       unfollowUser={this.props.unfollowUser}\r\n                       onPageChange={this.props.onPageChange}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       currentPage={this.props.currentPage}\r\n                       pageSize={this.props.pageSize}\r\n                />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n    onPageChange: getUsersThunkCreator,\r\n    followUser: followUserThunkCreator,\r\n    unfollowUser: unfollowUserThunkCreator\r\n})(UsersContainer)\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const statusAddSymbol = (e) => {\r\n        let newStatus = e.target.value\r\n        setStatus(newStatus)\r\n    }\r\n\r\n    return (editMode) ? <input onChange={statusAddSymbol} value={status} autoFocus={true}\r\n                               onBlur={deactivateEditMode} type=\"text\"/> :\r\n        <div> <span><b>Status</b>: </span> <span onDoubleClick={props.isOwner ? activateEditMode : null}>{(props.status) ? props.status : \"------\"}</span></div>\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../../common/FormsControl/FormsControl\";\r\nimport style from '../../../Profile.module.css'\r\nconst ProfileForm =({currentProfile,handleSubmit,error})=>{\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <button> Add changes</button>\r\n            {error&&<div className={style.error}>{error}</div>}\r\n            <div>\r\n                <b>fullName</b>:{createField([],Input,\"fullName\",'input','Enter your name',)}\r\n            </div>\r\n            <div>\r\n                <b>aboutMe</b>:{createField([],Textarea,\"aboutMe\",'textarea','Enter some info about you',)}\r\n            </div>\r\n            <div>\r\n                <b>lookingForAJob</b>:{createField([],\"input\",\"lookingForAJob\",'checkbox','',)}\r\n            </div>\r\n            <div>\r\n                <b>LookingForAJobDescription:</b>:{createField([],Textarea,\"lookingForAJobDescription\",'textarea','Enter your skills',)}\r\n            </div>\r\n            {Object.keys(currentProfile.contacts).map(item=>{return <div>{item}: {createField([],\"Input\",\"contacts.\"+item,'input','',)} </div>})}\r\n        </form>)\r\n}\r\n\r\nexport const ProfileFormReduxForm=reduxForm({form: 'ProfileChangeForm'})(ProfileForm)\r\n","import React, {useState} from 'react';\r\nimport style from './Profile.module.css'\r\nimport {ProfileFormReduxForm} from \"./MyPosts/ProfileInfo/ProfileStatus/ProfileForm\";\r\n\r\n\r\nconst ProfileCurrentData = ({currentProfile, isOwner, changeProfile}) => {\r\n    let contactsArray = Object.keys(currentProfile.contacts).map(item => <Contact platform={item}\r\n                                                                                  platformLink={currentProfile.contacts[item]}/>)\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const onSubmit = (formData) => {\r\n        let promise = changeProfile(formData,currentProfile.userId)\r\n        promise.then(()=>{setEditMode(false)})\r\n        promise.catch(() => {\r\n            setEditMode(true)\r\n        })\r\n    }\r\n    return (<div className={style.profileCurrentData}>\r\n            {isOwner && editMode &&\r\n            <ProfileFormReduxForm onSubmit={onSubmit} initialValues={currentProfile} currentProfile={currentProfile}/>}\r\n            {isOwner && !editMode && <button onClick={() => {\r\n                setEditMode(true)\r\n            }}>Change Profile</button>}\r\n            {!editMode && <div>\r\n                <div>\r\n                    <b>fullName</b>: {currentProfile.fullName}\r\n                </div>\r\n                <div>\r\n                    <b>aboutMe</b>: {currentProfile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>lookingForAJob</b>: {currentProfile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                <div>\r\n                    <b>lookingForAJobDescription</b>: {currentProfile.lookingForAJobDescription ? currentProfile.lookingForAJobDescription : \"---\"}\r\n                </div>\r\n\r\n                <div>\r\n                    <p>Contacts:</p>\r\n                    {contactsArray}\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst Contact = ({platform, platformLink}) => {\r\n    return <div>\r\n        <b>{platform}</b>:{platformLink}\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default ProfileCurrentData;\r\n\r\n","import React from 'react';\r\nimport style from './Profile.module.css'\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileCurrentData from \"../../ProfileCurrentData\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    if (!props.profilePage.currentUser) {\r\n        return <Preloader/>\r\n    } else\r\n        return (\r\n            <div>\r\n                <div className={style.descriptionBlock}>\r\n                    <img className={style.ava} src={props.profilePage.currentUser.photos.large}/>\r\n                    <div>{props.isOwner && <input onChange={mainPhotoSelected} type=\"file\"/>}</div>\r\n                    <div className={style.profileStatus}>\r\n                        <ProfileStatusWithHooks isOwner={props.isOwner} updateStatus={props.updateStatus}\r\n                                                status={props.profilePage.status}/>\r\n                    </div>\r\n                    <ProfileCurrentData changeProfile={props.changeProfile}\r\n                                        currentProfile={props.profilePage.currentUser} isOwner={props.isOwner}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={style.post}>\r\n                <img className={style.postAva}\r\n                     src=\"https://steamuserimages-a.akamaihd.net/ugc/924800625816030205/F497B26EA6F8D66D8A2BC9FBAD413259318EAEB5/?imw=512&amp;imh=512&amp;ima=fit&amp;impolicy=Letterbox&amp;imcolor=%23000000&amp;letterbox=true\"\r\n                     alt=\"\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span className={style.like}>likes {props.count}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst MyPosts = React.memo(({addPostCallback,...props}) => {\r\n    let myPostDataElements = props.profilePage.myPostsData.map(item => <Post message={item.message}\r\n                                                                             count={item.count}/>)\r\n    const onSubmit = (formData) => {\r\n        addPostCallback(formData)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                My Posts\r\n            </div>\r\n            <div>\r\n                <AddPostFormReduxForm onSubmit={onSubmit}/>\r\n                {myPostDataElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\nconst maxLength10=maxLengthCreator(10)\r\nconst AddPostForm = (props) => {\r\n       return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required,maxLength10]}  component={Textarea} name={\"post\"} placeholder={\"Add post\"}/>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst AddPostFormReduxForm = reduxForm({form: \"addPost\"})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import {profileAPI, usersAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"profile/ADD_POST\";\r\nconst SET_CURRENT_USER = 'profile/SET_CURRENT_USER'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst DELETE_POST = 'profile/DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS'\r\nlet initialState = {\r\n    myPostsData: [{id: 1, message: 'HI man. Give me your bag', count: '10'},\r\n        {id: 2, message: 'What did you say? Crazy mother fucker!', count: '20'},\r\n        {id: 3, message: 'Mm. Goodbye', count: '0'}],\r\n    currentUser: null,\r\n    status: 'S'\r\n}\r\nlet profileReducer = (state = initialState, action) => {\r\n    if (action.type === ADD_POST) {\r\n        let newPost = {id: 4, message: action.formData.post, count: '20'};\r\n        return {...state, myPostsData: [...state.myPostsData, newPost]}\r\n        // state.myPostsData.push(newPost);\r\n        // state.newPostText = '';\r\n    } else if (action.type === SET_CURRENT_USER) {\r\n        return {...state, currentUser: action.currentUser}\r\n    } else if (action.type === DELETE_POST) {\r\n        return {...state, myPostsData: state.myPostsData.filter((item) => item.id !== action.id)}\r\n    } else if (action.type === SET_STATUS) {\r\n\r\n        return {...state, status: action.status}\r\n    } else if (action.type === SAVE_PHOTO_SUCCESS) {\r\n\r\n        return {...state, currentUser: {...state.currentUser, photos: action.photos}}\r\n    }\r\n    return state\r\n}\r\nexport let addPostActionCreator = (formData) => ({type: ADD_POST, formData})\r\nexport let deletePost = (id) => ({type: DELETE_POST, id})\r\nexport let setStatusActionCreator = (status) => ({type: SET_STATUS, status})\r\nexport let setCurrentUserCallback = (currentUser) => ({type: SET_CURRENT_USER, currentUser})\r\nexport let setCurrentUserThunkCreator = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(\r\n        (response) => {\r\n            dispatch(setCurrentUserCallback(response.data))\r\n\r\n        })\r\n}\r\nexport const getStatusThunkCreator = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then(\r\n        (response) => {\r\n            dispatch(setStatusActionCreator(response.data))\r\n        })\r\n}\r\nexport const updateStatusThunkCreator = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(\r\n        (response) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatusActionCreator(status))\r\n            }\r\n        })\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        debugger\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const changeProfileDataThunkCreator = (newProfileData, userId) => async (dispatch) => {\r\n    let response = await profileAPI.changeProfileData(newProfileData)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setCurrentUserThunkCreator(userId))\r\n    }\r\n\r\n    if (response.data.resultCode !== 0) {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\r\n        let action = stopSubmit(\"ProfileChangeForm\", {_error: message})\r\n        dispatch(action)\r\n        return Promise.reject()\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\r\n\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {profilePage: state.profilePage}\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPostCallback: (formData) => {\r\n            dispatch(addPostActionCreator(formData))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport style from './Profile.module.css'\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <main className={style.mainContent}>\r\n            <ProfileInfo savePhoto={props.savePhoto} changeProfile={props.changeProfile} isOwner={props.isOwner} updateStatus={props.updateStatus} profilePage={props.profilePage}/>\r\n            {props.isOwner&& <MyPostsContainer />}\r\n        </main>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","export const getProfilePage=(state)=>{\r\n    return state.profilePage\r\n}\r\nexport const getIsAuth=(state)=>{ return state.auth.userInfo.isLogin}\r\nexport const  getCurrentUserId=(state)=>{return state.auth.userInfo.id }","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeProfileDataThunkCreator,\r\n    getStatusThunkCreator, savePhoto,\r\n    setCurrentUserThunkCreator,\r\n    updateStatusThunkCreator\r\n} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getCurrentUserId, getIsAuth, getProfilePage} from \"../../redux/profile-selectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            if (this.props.isAuth) {\r\n                userId = this.props.currentUserId\r\n            }\r\n        }\r\n        this.props.setCurrentUser(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let userId\r\n        if (this.props.match.params.userId!==prevProps.match.params.userId) {\r\n            if (this.props.isAuth) {\r\n                userId = this.props.currentUserId\r\n                this.props.setCurrentUser(userId)\r\n                this.props.getStatus(userId)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {if (!this.props.isAuth&&!this.props.match.params.userId) {return  <Redirect to='/login'/>}\r\n        return <Profile savePhoto={this.props.savePhoto} changeProfile={this.props.changeProfile} updateStatus={this.props.updateStatus} profilePage={this.props.profilePage} isOwner={!this.props.match.params.userId}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: getProfilePage(state),\r\n        isAuth: getIsAuth(state),\r\n        currentUserId: getCurrentUserId(state)\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, {\r\n    changeProfile:changeProfileDataThunkCreator,\r\n        setCurrentUser: setCurrentUserThunkCreator,\r\n        getStatus: getStatusThunkCreator,\r\n        updateStatus: updateStatusThunkCreator,\r\n        savePhoto\r\n    }), withRouter\r\n    )(ProfileContainer)","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    const Logout=()=>{\r\n        props.logout()\r\n    }\r\n    return (\r\n        <header className={style.header}>\r\n            <img src=\"https://i.pinimg.com/736x/81/77/e3/8177e3c0b884d55744270ff1ba02e3d6--funny-shit-adult-humor.jpg\"\r\n                 alt=\"\"/>\r\n            {props.auth.isLogin? <>\r\n                        <span>{props.auth.login}</span>\r\n                        <button onClick={Logout}>Logout</button>\r\n                    </>\r\n                : <NavLink to='/login'> LOGIN </NavLink>}\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst AUTH_USER = \"auth/AUTH_USER\";\r\nconst SET_CAPTCHA_URL='auth/SET_CAPTCHA_URL'\r\nlet initialState = {\r\n    userInfo: {\r\n        id: null,\r\n        login: null,\r\n        email: null,\r\n        isLogin: false\r\n    },\r\n    captchaUrl:\"\"\r\n}\r\nlet authReducer = (state = initialState, action) => {\r\n    if (action.type === AUTH_USER) {\r\n        return {\r\n            ...state, userInfo: {\r\n                ...action.userInfo, id: action.id,\r\n                login: action.login,\r\n                email: action.email,\r\n                isLogin: action.isLogin\r\n            }\r\n        }\r\n\r\n    }\r\n    else if(action.type === SET_CAPTCHA_URL){\r\n        return {...state,captchaUrl:action.url}\r\n    }\r\n    return state\r\n}\r\n\r\n\r\nexport const setLoginUserDataActionCreator = (email, id, login, isLogin) => ({\r\n    type: AUTH_USER,\r\n    email,\r\n    id,\r\n    login,\r\n    isLogin\r\n})\r\n\r\nexport const setCaptchaUrl=(url)=>({type:SET_CAPTCHA_URL,url})\r\nexport const sendLoginDataRequest = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n\r\n    let request = await authAPI.login(email, password, rememberMe,captcha)\r\n\r\n    if (request.data.resultCode === 0) {\r\n        let response = await authAPI.getAuthStatus();\r\n        debugger\r\n        if (response.data.resultCode === 0) {\r\n            const {email, id, login} = response.data.data\r\n            dispatch(setLoginUserDataActionCreator(email, id, login, true))\r\n            dispatch(setCaptchaUrl(\"\"))\r\n        }\r\n    }\r\n    if (request.data.resultCode === 10) {\r\n        let response = await authAPI.getCaptcha();\r\n        if (response) {\r\n            dispatch(setCaptchaUrl(response.data.url))\r\n            let message = request.data.messages.length > 0 ? request.data.messages[0] : 'some error'\r\n            let action = stopSubmit(\"login\", {_error: message})\r\n            dispatch(action)\r\n        }\r\n    } else {\r\n        let message = request.data.messages.length > 0 ? request.data.messages[0] : 'some error'\r\n        let action = stopSubmit(\"login\", {_error: message})\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport const sendLogoutRequest = () => async (dispatch) => {\r\n    let request = await authAPI.logout()\r\n    if (request.data.resultCode === 0) {\r\n        dispatch(setLoginUserDataActionCreator(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport const getAuthStatusThunkCreator = () => (dispatch) => {\r\n    return authAPI.getAuthStatus().then(\r\n        (response) => {\r\n            if (response.data.resultCode === 0) {\r\n                const {email, id, login} = response.data.data\r\n                dispatch(setLoginUserDataActionCreator(email, id, login, true))\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {sendLogoutRequest} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header logout={this.props.logout} auth={this.props.auth}/>\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {auth: state.auth.userInfo}\r\n    }\r\nlet mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n\r\n        logout:()=>{dispatch(sendLogoutRequest())}\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HeaderContainer)\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendLoginDataRequest} from \"../../redux/auth-reducer\";\r\nimport style from '../common/FormsControl/FormsControl.module.css'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = ({email, password, rememberMe,captcha}) => {debugger\r\n        props.sendLoginDataRequest(email, password, rememberMe,captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    } else return <div className={style.loginWrapper}>\r\n    <div className={style.login}>\r\n        <h3>LOGIN</h3>\r\n        <LoginFormRedux captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n    </div>\r\n}\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit} className={style.registrationForm}>\r\n            {createField([required], Input, \"email\", \"input\",\"email\")}\r\n            {createField([required], Input, \"password\", \"password\",\"password\")}\r\n            {createField([], \"input\", \"rememberMe\", \"checkbox\",\"\",\"remember me\")}\r\n            {props.captchaUrl&&<div><p>Enter captcha</p>\r\n                {createField([required], Input, \"captcha\", \"input\",\"captcha\")}\r\n                <img className={style.captcha} src={props.captchaUrl}/></div>}\r\n            <button>Login</button>\r\n            {props.error && <div className={style.summaryError}>\r\n                {props.error}\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\nconst LoginFormRedux = reduxForm({form: 'login'})(LoginForm)\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.userInfo.isLogin,\r\n        captchaUrl:state.auth.captchaUrl\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {sendLoginDataRequest})(Login)\r\n\r\n\r\n","import {getAuthStatusThunkCreator} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"app/INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {initialized: false}\r\nlet appReducer = (state = initialState, action) => {\r\n    if (action.type === INITIALIZED_SUCCESS) {\r\n        return {\r\n            ...state, initialized: true\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const initializeSuccess=()=>({type:INITIALIZED_SUCCESS})\r\nexport const initializeApp=()=>(dispatch)=>{\r\n    let promise= dispatch(getAuthStatusThunkCreator())\r\n    promise.then(()=>{\r\n        dispatch(initializeSuccess())})\r\n\r\n}\r\nexport default appReducer\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    UsersPage:usersReducer,\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    app:appReducer\r\n})\r\nlet store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)))\r\nexport default store\r\nwindow.store = store","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {return <React.Suspense fallback={<div><Preloader/></div>}><Component {...props}/></React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport MainNav from \"./components/MainNav/MainNav\";\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport Preloader from \"./components/common/Preloader\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {compose} from \"redux\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\n\nconst DialogsContainerWithSuspense=withSuspense(DialogsContainer)\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.isInitiolized) {\n            return <Preloader/>\n        }\n        return (<div className=\"main-wrapper\">\n            <div className=\"grid-wrapper\">\n\n                <HeaderContainer/>\n                <MainNav/>\n                <div className=\"app-wrapper-content\">\n                    <Route render={() => <ProfileContainer/>} path=\"/profile/:userId?\"/>\n                </div>\n                <div className=\"app-wrapper-content\">\n                    <Route render={()=>{return <DialogsContainerWithSuspense/>}} path=\"/messages\"/>\n                </div>\n                <div className=\"app-wrapper-content\">\n                    <Route render={() => <UsersContainer/>} path=\"/users\"/>\n                </div>\n                <div className=\"app-wrapper-content\">\n                    <Route component={News} path=\"/news\"/>\n                </div>\n                <div className=\"app-wrapper-content\">\n                    <Route component={Music} path=\"/music\"/>\n                </div>\n                <div className=\"app-wrapper-content\">\n                    <Route component={Settings} path=\"/settings\"/>\n                </div>\n                <div className=\"app-wrapper-content\">\n                    <Route render={() => <Login/>} path=\"/login\"/>\n                </div>\n                <div className=\"app-wrapper-content\">\n                    <Route render={() => <ProfileContainer/>} path=\"/\" exact/>\n                </div>\n            </div>\n        </div>)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        initializeApp: () => {\n            dispatch(initializeApp())\n        },\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isInitiolized: state.app.initialized\n    }\n}\nlet AppContainer = compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(App)\nconst SamuraiJsApp = (props) => {\n    return <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\nexport default SamuraiJsApp","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport SamuraiJsApp from \"./App\";\n\n\nReactDOM.render(<SamuraiJsApp/>, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainNav\":\"MainNav_mainNav__3vQSF\",\"active\":\"MainNav_active__1Uurs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__3VFCJ\",\"mainImage\":\"Profile_mainImage__3sZYG\",\"profileCurrentData\":\"Profile_profileCurrentData__3uBlf\",\"error\":\"Profile_error__2147e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__3TbP7\",\"user\":\"User_user__2WYEu\",\"user__name\":\"User_user__name__1cDKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__UXnhS\",\"mainImage\":\"Profile_mainImage__11nku\",\"ava\":\"Profile_ava___vhV3\",\"profileStatus\":\"Profile_profileStatus__2cl2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postAva\":\"Post_postAva__2zicR\",\"post\":\"Post_post__M3FuW\",\"like\":\"Post_like__1EIQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentWrapper\":\"Music_mainContentWrapper__3ubGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentWrapper\":\"Settings_mainContentWrapper__f3HM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1rZiX\",\"active\":\"Paginator_active__3ADaX\"};"],"sourceRoot":""}