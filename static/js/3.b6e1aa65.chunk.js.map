{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","className","style","dialogItem","activeClassName","active","to","id","link","name","Message","messageItem","message","maxLength30","maxLengthCreator","AddMessageFormReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","Dialogs","dialogsDataElements","dialogsPage","dialogsData","map","item","i","key","messageDataElements","messageData","mainContent","mainContentWrapper","dialogs","messages","formData","console","log","addMessageCallback","DialogsToLogin","Component","connect","state","isAuth","auth","userInfo","isLogin","withAuthRedirect","DialogsContainer","addMessageActionCreator"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,mBAAqB,oCAAoC,YAAc,6BAA6B,QAAU,yBAAyB,SAAW,4B,oBCApKD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,6B,oBCAvGD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,KAAO,wB,iHCYrDC,EAVI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAMC,YAClB,kBAAC,IAAD,CAASC,gBAAiBF,IAAMG,OAASC,GAAE,oBAAeN,EAAMO,GAArB,KAA4BN,UAAWC,IAAMM,MAAxF,IAAgGR,EAAMS,Q,kBCMnGC,EAVC,SAACV,GACb,OACI,yBAAKC,UAAWC,IAAMS,aAClBX,EAAMY,U,wCC8BZC,EAAYC,YAAiB,IAY7BC,EAA0BC,YAAU,CAACC,KAAM,iBAAiBC,gBAF9C,SAACC,EAAQC,GAAT,OAChBA,EAASC,YAAM,qBACaL,EAXT,SAAChB,GACpB,OAAQ,0BAAMsB,SAAUtB,EAAMuB,cAC1B,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAASb,GAAcc,UAAWC,IAAUC,YAAa,mBAAoBpB,KAAM,YACrG,6BACI,oDAQGqB,EAvCE,SAAC9B,GACd,IAAI+B,EAAsB/B,EAAMgC,YAAYC,YAAYC,KAAI,SAACC,EAAKC,GAAN,OAAY,kBAAC,EAAD,CAAYC,IAAKD,EAAG3B,KAAM0B,EAAK1B,KAAMF,GAAI4B,EAAK5B,QAClH+B,EAAsBtC,EAAMgC,YAAYO,YAAYL,KAAI,SAACC,EAAKC,GAAN,OAAY,kBAAC,EAAD,CAASC,IAAKD,EAAGxB,QAASuB,EAAKvB,aAOvG,OACI,0BAAMX,UAAWC,IAAMsC,aACnB,yBAAKvC,UAAWC,IAAMuC,oBAClB,6BAASxC,UAAWC,IAAMwC,SACrBX,GAEL,6BAAS9B,UAAWC,IAAMyC,UACrBL,EACD,6BACI,kBAACvB,EAAD,CAAyBO,SAd9B,SAACsB,GACZC,QAAQC,IAAIF,GAChB5C,EAAM+C,mBAAmBH,W,gBCOvBI,EClBmB,SAACC,GAQtB,OAAQC,aAHc,SAACC,GACnB,MAAO,CAACC,OAAQD,EAAME,KAAKC,SAASC,WAEP,GAAzBL,EAPO,SAAClD,GACZ,OAASA,EAAMoD,OACe,kBAACH,EAAcjD,GAAzC,kBAAC,IAAD,CAAUM,GAAG,cDeFkD,CAAiB1B,GAClC2B,EAAmBP,aAhBH,SAACC,GACnB,MAAO,CACHnB,YAAamB,EAAMnB,gBAIF,SAACZ,GACtB,MAAO,CACH2B,mBAAoB,SAACH,GACjBxB,EAASsC,YAAwBd,QAOpBM,CAA6CF,GAEvDS","file":"static/js/3.b6e1aa65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentWrapper\":\"Dialogs_mainContentWrapper__3c4Zj\",\"mainContent\":\"Dialogs_mainContent__2VI_h\",\"dialogs\":\"Dialogs_dialogs__3qUEX\",\"messages\":\"Dialogs_messages__vq8-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__2IRmq\",\"link\":\"DialogItem_link__JIyVH\",\"active\":\"DialogItem_active__3nREs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"Message_messageItem__Yz6iM\",\"link\":\"Message_link__7vt59\"};","import React from 'react';\r\nimport style from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.dialogItem}>\r\n            <NavLink activeClassName={style.active}  to={`/messages/${props.id} `} className={style.link}> {props.name}</NavLink>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './Message.module.css'\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.messageItem}>\r\n           {props.message}\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./Dialog/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm,reset} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../validators/validators\";\r\n\r\n\r\nconst  Dialogs = (props) => {\r\n    let dialogsDataElements = props.dialogsPage.dialogsData.map((item,i) => <DialogItem key={i} name={item.name} id={item.id}/>)\r\n    let messageDataElements = props.dialogsPage.messageData.map((item,i) => <Message key={i} message={item.message}/>)\r\n\r\n    const onSubmit=(formData)=>{\r\n        console.log(formData)\r\n    props.addMessageCallback(formData)\r\n\r\n}\r\n    return (\r\n        <main className={style.mainContent}>\r\n            <div className={style.mainContentWrapper}>\r\n                <section className={style.dialogs}>\r\n                    {dialogsDataElements}\r\n                </section>\r\n                <section className={style.messages}>\r\n                    {messageDataElements}\r\n                    <div>\r\n                        <AddMessageFormReduxForm onSubmit={onSubmit} />\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nconst maxLength30=maxLengthCreator(30)\r\nconst AddMessageForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field validate={[required,maxLength30]} component={Textarea} placeholder={\"Add your message\"} name={\"message\"}/>\r\n        <div>\r\n            <button>Add message</button>\r\n        </div>\r\n    </form>)\r\n\r\n}\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset(\"AddMessageForm\"))\r\nconst AddMessageFormReduxForm = reduxForm({form: \"AddMessageForm\",onSubmitSuccess: afterSubmit})(AddMessageForm)\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageCallback: (formData) => {\r\n            dispatch(addMessageActionCreator(formData))\r\n        },\r\n\r\n    }\r\n}\r\n\r\nconst DialogsToLogin = withAuthRedirect(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsToLogin)\r\n\r\nexport default DialogsContainer;\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    let AfterHoc = (props) => {\r\n        return (!props.isAuth) ?\r\n            <Redirect to='/login'/> : <Component {...props}/>;\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {isAuth: state.auth.userInfo.isLogin}\r\n    }\r\n    return  connect(mapStateToProps, {})(AfterHoc)\r\n}\r\nexport default withAuthRedirect\r\n"],"sourceRoot":""}